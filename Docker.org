#+TITLE: Docker
#+WIKI: virtualization/container

* 文件夹配置

#+BEGIN_SRC bash
# /var/lib/docker/
sudo mkdir -p /docker/{data,log}
#+END_SRC

* Installation
:HEADLINE:
en_US
zh_CN: 安装
:END:

** RHEL 7 官方

#+BEGIN_SRC bash
sudo yum install -y docker device-mapper-libs device-mapper-event-libs
#+END_SRC

** Docker 官方

*** CentOS 7

#+BEGIN_SRC bash
sudo yum remove docker \
                  docker-common \
                  docker-selinux \
                  docker-engine
#+END_SRC

#+BEGIN_SRC bash
sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce
#+END_SRC

*** Debian
#+BEGIN_SRC bash
sudo apt-get remove -y docker docker-engine docker.io
sudo apt-get -y install apt-transport-https ca-certificates \
     curl gnupg2 software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 \
     apt-key fingerprint 0EBFCD88 |\
     grep '9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88'
#   "deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \
sudo add-apt-repository \
   "deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian \
   $(lsb_release -cs) \
   stable"
sudo apt-get update
sudo apt-get install -y docker-ce
#+END_SRC

*** Raspbian

#+BEGIN_SRC bash
sudo apt-get remove -y docker docker-engine docker.io
sudo apt-get -y install apt-transport-https ca-certificates \
     curl gnupg2
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 \
     apt-key fingerprint 0EBFCD88 |\
     grep '9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88'
cat <<EOF | sudo tee /etc/apt/sources.list.d/docker.list
deb https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/raspbian $(lsb_release -cs) stable
EOF
sudo apt-get update
sudo apt-get install -y docker-ce
#+END_SRC


* 网络配置

** Debian 替换默认网桥和 IPTables

我们用 firewalld 和 自己的网桥。无奈默认网桥关不掉，只能替换为自己的。

#+BEGIN_SRC bash
sudo ip l del docker0
sudo vi /etc/docker/daemon.json
#+END_SRC

#+BEGIN_SRC json
{
  "iptables": false,
  "bridge": "br-nat"
}
#+END_SRC

** CentOS 7 替换默认网桥和 IPTables

我们用 nftables 和 自己的网桥。无奈默认网桥关不掉，只能替换为自己的。

#+BEGIN_SRC bash
sudo ip l del docker0
sudo vi /etc/sysconfig/docker-network
#+END_SRC

#+BEGIN_EXAMPLE
--iptables=false --bridge=br-nat
#+END_EXAMPLE

** 添加 macvlan 网络

见[[https://docs.docker.com/engine/userguide/networking/get-started-macvlan/#macvlan-bridge-mode-example-usage][官方文档]]。在创建网络时，即便是以后我们手动分配地址，docker也需要指定网络的子网信息。

#+BEGIN_SRC bash
docker network create -d macvlan \
    --subnet=172.16.86.0/24 \
    --gateway=172.16.86.1  \
    -o parent=eth0 pub_net
#+END_SRC

* 启动
#+BEGIN_SRC bash
sudo systemctl start docker
sudo systemctl status docker
sudo systemctl enable docker
#+END_SRC

* 存储配置

Centos 7 默认用 loopfile 存储方式，比较慢。切 lvm thinpool 的方式见[[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/managing_containers/managing_storage_with_docker_formatted_containers][官方文档]]。例子
#+BEGIN_SRC bash
sudo vgcreate docker-vg /dev/mdx
sudo bash -c 'echo VG=docker-vg >> /etc/sysconfig/docker-storage-setup'
sudo systemctl start docker
#+END_SRC

* SELinux
** 指定 bind mount 位置
以 /srv/docker 为例

#+BEGIN_SRC bash
sudo mkdir -p /srv/docker
sudo semanage fcontext -a -t var_t '/srv/docker'
sudo semanage fcontext -d -t svirt_sandbox_file_t '/srv/docker/.*'
sudo restorecon -vr /srv/docker
#+END_SRC

* Build

#+BEGIN_SRC bash
sudo docker build --pull -t $tag .
#+END_SRC

* Systemd Cgroup Manager

#+BEGIN_SRC json
{
  "exec-opts": [ "native.cgroupdriver=systemd" ]
}
#+END_SRC

* nsenter

#+begin_src bash
sudo nsenter -t $(sudo docker inspect -f '{{.State.Pid}}' recur64.lab.ivi2.org) -n bash
#+end_src
